{"version":3,"sources":["components/SearchBar.js","Data.js","components/useScript.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","console","log","state","onSearchByAddress","addr","bind","Input","action","Button","color","content","onClick","this","placeholder","onChange","style","width","height","margin","Component","Data","useState","data","setData","loading","setLoading","error","setError","address","setAddr","useEffect","a","axios","get","params","response","stores","fetchData","dataList","map","dt","remain_stat","Item","key","code","padding","selectStore","lat","lng","Content","Header","Meta","Group","divided","link","useScript","url","script","document","createElement","src","async","type","head","appendChild","onload","kakao","maps","load","el","getElementById","markerPos","LatLng","Map","center","level","marker","Marker","position","setMap","body","removeChild","setLng","setLat","id","App","contextRef","createRef","Grid","columns","Column","Ref","innerRef","Segment","Rail","size","close","Sticky","context","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.08f6d948.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Input, Button } from \"semantic-ui-react\";\r\n\r\nexport default class SearchBar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      addr: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.onSearchByAddress(this.state.addr);\r\n  }\r\n \r\n  render() {\r\n    return (\r\n    <Input action = { <Button color='teal' content='Search' onClick={this.handleSubmit } /> }\r\n          placeholder=\"예- '서울특별시 강남구' or '서울특별시 강남구 논현동'\"\r\n          value={this.state.addr}\r\n          onChange={this.handleChange}\r\n          name=\"addr\"\r\n          style={{width: '95%', height: 50, margin: 10}}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Item } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nfunction Data(props) {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [addr, setAddr] = useState(props.address);\r\n\r\n  if(props.address != addr) {\r\n      setAddr(props.address)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setError(null);\r\n        setData(null);\r\n        setLoading(true);\r\n        const response = await axios.get(\r\n          'https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByAddr/json', {\r\n          params: {\r\n            address: props.address\r\n          }\r\n        }\r\n        );\r\n        setData(response.data.stores); // 데이터는 response.data 안에 들어있습니다.\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [addr]);\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!data) return null;\r\n\r\n    const dataList =  data.map(dt => {\r\n      let remain_stat = \"\";\r\n      let color = \"\";\r\n      if(dt.remain_stat === \"plenty\") {\r\n        remain_stat = \"충분 (100개 이상)\"\r\n        color = \"green\";\r\n      }else if(dt.remain_stat === \"some\") {\r\n        remain_stat = \"보통 (30~99개)\"\r\n        color = \"yellow\";\r\n      }else if(dt.remain_stat === \"few\") {\r\n        remain_stat = \"적음 (2~29개)\"\r\n        color = \"red\";\r\n      }else if(dt.remain_stat === \"empty\") {\r\n        remain_stat = \"없음\"\r\n        color = \"gray\";\r\n      }\r\n        return (\r\n            <Item key = {dt.code} style={{ padding:'10px'}} onClick={()=> props.selectStore(dt.lat, dt.lng)}>\r\n                <Item.Content>\r\n                    <Item.Header style = {{color: {color}}}>\r\n                        {dt.name} <br/>\r\n                        [{remain_stat}]\r\n                    </Item.Header>\r\n                    <Item.Meta>\r\n                        {dt.addr}\r\n                    </Item.Meta>\r\n                </Item.Content>\r\n            </Item>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <Item.Group divided link>\r\n            {dataList}\r\n        </Item.Group>\r\n    )\r\n   \r\n}\r\n\r\nexport default Data;\r\n","/*global kakao*/\r\nimport {useEffect} from 'react';\r\n\r\nconst useScript = ({url, lat, lng}) => {\r\n    useEffect(() => {\r\n      const script = document.createElement('script');\r\n  \r\n      script.src = url;\r\n      script.async = true;\r\n      script.type = 'text/javascript';\r\n\r\n      document.head.appendChild(script);\r\n  \r\n      script.onload = () => {\r\n          kakao.maps.load(() => {\r\n              let el = document.getElementById('map');\r\n              let markerPos = new kakao.maps.LatLng(lat, lng);\r\n              // console.log(el);\r\n              let map = new kakao.maps.Map(el, {\r\n                center: new kakao.maps.LatLng(lat, lng),\r\n                level: 3\r\n              });\r\n              let marker = new kakao.maps.Marker({\r\n                position: markerPos\r\n              });\r\n              if(lat > 0 || lng > 0) marker.setMap(map);\r\n          })\r\n      }\r\n      return () => {\r\n        document.body.removeChild(script);\r\n      }\r\n    }, [url, lat, lng]);\r\n  };\r\n  \r\n  export default useScript;","import React, { useState } from 'react';\r\nimport useScript from './useScript';\r\nimport {\r\n    Sticky,\r\n  } from 'semantic-ui-react'\r\n\r\nexport default function Map(props) {\r\n    const [lng, setLng] = useState(props.lng);\r\n    const [lat, setLat] = useState(props.lat);\r\n\r\n    console.log(\"!!\" + lat +\",\"+ lng)\r\n\r\n    if(props.lng !== lng || props.lat !== lat) {\r\n        setLng(props.lng);\r\n        setLat(props.lat);\r\n    }\r\n    \r\n    useScript(\r\n        {\r\n            url: '//dapi.kakao.com/v2/maps/sdk.js?appkey=70302667d8e5c1ebddc9d4a821edfbe7&autoload=false',\r\n            lat: lat,\r\n            lng: lng,\r\n        }\r\n    );\r\n\r\n    return (\r\n            <div id=\"map\" style={{width: '100%', height: '500px'}}></div>\r\n    );\r\n}\r\n","import React, { Component, createRef } from 'react';\r\nimport { Segment, Grid, Ref, Rail, Sticky } from 'semantic-ui-react';\r\nimport SearchBar from './components/SearchBar';\r\nimport Data from './Data';\r\n\r\nimport Map from './components/Map';\r\n\r\nclass App extends Component {\r\n  contextRef = createRef()\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      address : \"\",\r\n      lat: 0,\r\n      lng: 0,\r\n    }\r\n  }\r\n\r\n  onSearchByAddress(addr) {\r\n    this.setState({\r\n      address : addr\r\n    })\r\n  }\r\n\r\n  selectStore(lat, lng) {\r\n    this.setState({\r\n      lat: lat,\r\n      lng: lng\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <SearchBar onSearchByAddress={this.onSearchByAddress.bind(this)} />\r\n          <Grid columns={2}>\r\n            <Grid.Column>\r\n              <Ref innerRef={this.contextRef}>\r\n                <Segment>\r\n                    <Data address={this.state.address} selectStore={this.selectStore.bind(this)}/>\r\n                  <Rail size='large' close position='right'>\r\n                    <Sticky context={this.contextRef}>\r\n                      <Map lat={this.state.lat} lng={this.state.lng} />\r\n                    </Sticky>\r\n                  </Rail>\r\n                </Segment>\r\n              </Ref>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\n// import rootReducer from './reducer';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}